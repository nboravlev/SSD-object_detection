# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eMZjSWKuL8jpKD8LkNiUXeIKVHQsc1T7
"""

#формирует новую папку и сохраняет в нее изображения с разметкой и аннотацией, который заранее известны перед обучением.
import os
import matplotlib.pyplot as plt
from matplotlib import patches
import pandas as pd
from PIL import Image


def filterFiles(directoryPath, extension):
    relevant_path = directoryPath
    included_extensions = [extension]
    file_names = [file1 for file1 in os.listdir(relevant_path) if any(file1.endswith(ext) for ext in included_extensions)]
    return file_names, len(file_names)

[image_names, numberOfFiles] = filterFiles("/content/BCCD_Dataset/BCCD/JPEGImages", "jpg")

trainRCNN = pd.read_csv('/content/BCCD_Dataset/test.csv', sep=",", header=None)
trainRCNN.columns = ['filename', 'cell_type', 'xmin', 'xmax', 'ymin', 'ymax']

output_path = "/content/imagesBox"
if not os.path.exists(output_path):
    print("Папка не существует. Создаю папку imagesBox.")
    os.makedirs(output_path)
else:
    print("Папка imagesBox уже существует.")

for imageFileName in image_names:
    print(f"Обрабатываю изображение: {imageFileName}")
    fig = plt.figure()
    ax = fig.add_axes([0, 0, 1, 1])
    plt.axis('off')

    image_path = '/content/BCCD_Dataset/BCCD/JPEGImages/' + imageFileName
    image = plt.imread(image_path)
    plt.imshow(image)

    for _, row in trainRCNN[trainRCNN.filename == imageFileName].iterrows():
        xmin = float(row.xmin)
        xmax = float(row.xmax)
        ymin = float(row.ymin)
        ymax = float(row.ymax)

        width = xmax - xmin
        height = ymax - ymin

        if row.cell_type == 'RBC':
            ax.annotate('RBC', xy=(xmax - 40, ymin + 20))
            rect = patches.Rectangle((xmin, ymin), width, height, edgecolor='r', facecolor='none')
        elif row.cell_type == 'WBC':
            ax.annotate('WBC', xy=(xmax - 40, ymin + 20))
            rect = patches.Rectangle((xmin, ymin), width, height, edgecolor='b', facecolor='none')
        elif row.cell_type == 'Platelets':
            ax.annotate('Platelets', xy=(xmax - 40, ymin + 20))
            rect = patches.Rectangle((xmin, ymin), width, height, edgecolor='g', facecolor='none')
        ax.add_patch(rect)

    save_path = os.path.join(output_path, imageFileName)
    fig.savefig(save_path, dpi=90, bbox_inches='tight')
    plt.close()
    #print(f"Сохранил изображение в {save_path}")

print("PLOTBOX COMPLETED!")

img_path = '/content/BCCD_Dataset/BCCD/JPEGImages/' #путь к оригинальному файлу
annotated_path = '/content/imagesBox/' #путь к файлу с разметкой
file_name = 'BloodImage_00007.jpg' #название файла


annotated_image = Image.open(annotated_path+file_name).convert('RGB')


img = Image.open(img_path+file_name).convert('RGB')
predicted_image = detect(img, min_score=0.2, max_overlap=0.5, top_k=200)

fig, axs = plt.subplots(1, 2, figsize=(20, 10))

# Оригинальное изображение
axs[0].imshow(annotated_image)
axs[0].set_title("Original Image")
axs[0].axis("off")

# Аннотированное изображение
axs[1].imshow(predicted_image)
axs[1].set_title("predicted_image")
axs[1].axis("off")

# Показать оба изображения
plt.show()